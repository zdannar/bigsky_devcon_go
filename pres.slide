## NOTES:
# First class functions
# Compilations are fast
# Show how errors work.

#------------------
# SLIDE
#------------------
Go for DevOps, ...
Riding a big toothed bear into battle
11 Jun 2016

Zack Dannar
Swiss Army Knife
zackdannar@yahoo.com

#------------------
# SLIDE
#------------------
* ~/$ whoami

*Zack* *Dannar*
Sr. DevOps at Pulsara

*Oracle:*
- Software Development Manager
- Sr. SysAdmin

*RigtNow:*
- SysAdmin

*Zoot:*
- SysAdmin
- Criteria Programmer

.background swiss.png

#------------------
# SLIDE
#------------------

* Bear?
What is this nonsense about a bear?

#------------------
# SLIDE
#------------------
* Intimidating?
.image putin.jpg

#------------------
# SLIDE
#------------------
* Volley Ball Anyone?
.image volley_ball.gif

#------------------
# SLIDE
#------------------
* Is this better?
.image gophlastic2.png

#------------------
# SLIDE
#------------------

* What was wrong with the other languages?
.image head_scratch.jpg

#------------------
# SLIDE
#------------------

* Common DevOps* languages (Interpreted)
- Python
- Ruby
- Perl
- ...

#------------------
# SLIDE
#------------------

* Compiled/Performant
- C
- C++
- Java
- Erlang
- ...

#------------------
# SLIDE
#------------------
* What I was looking for.

- Avoid Language Nuances
- Static Types
- Deployability
- Speed of Development
- Performance

#------------------
# SLIDE
#------------------
* ...
- *Avoid* *Language* *Nuances*
- Static Types
- Deployability
- Speed of Development
- Performance

#------------------
# SLIDE
#------------------
* Language Nuances
- No actual main program driver function
- Lack of truth
- Too much syntactic sugar
- Poor scoping mechanisms

#------------------
# SLIDE
#------------------
* ...
.play wtf.py HLmain

#------------------
# SLIDE
#------------------
* ...
.image what_is_that.gif
.code wtf.py /WTF OMIT/,/WTFE OMIT/

#------------------
# SLIDE
#------------------
* ...
.play wtf.rb

#------------------
# SLIDE
#------------------
* ...
- Avoid Language Nuances
- *Static* *Types*
- Deployability
- Speed of Development
- Performance

#------------------
# SLIDE
#------------------
* Static Types

- Code readability
- No more guessing games
\...

* Static Types ...
.code hello.c /R2 OMIT/,/R2E OMIT/ HLstype

* Static Types ...
.code hello.c /R1 OMIT/,/R1E OMIT/ HLstype

#------------------
# SLIDE
#------------------
* ...
- Avoid Language Nuances
- Static Types
- *Deployability*
- Speed of Development
- Performance

#------------------
# SLIDE
#------------------
* Deployabilty, Avoiding...
.image dep_hell.jpg

#------------------
# SLIDE
#------------------
* Deploying libs and managing deps sucks.

- Conflicts with current libs
- Lib packaging
- Deployment time
\...

#------------------
# SLIDE
#------------------
* Deploying libs and managing deps sucks.

preferably ...

Statically compiled

#------------------
# SLIDE
#------------------
* ...
- Avoid Language Nuances
- Static Types
- Deployability
- *Speed* *of* *Development*
- Performance

#------------------
# SLIDE
#------------------
* Speed of Development

- Didn't have the time to code C or C++.
- Need to be to solve an issue in roughly the same time as python.
- Peers have to be able to read the code.


#------------------
# SLIDE
#------------------
* ...
- Avoid Language Nuances
- Static Types
- Deployability
- Speed of Development
- *Performance*

#------------------
# SLIDE
#------------------
* Performance
- Not C, but fairly close.
- Actual threading, able to use multiple cores.

#------------------
# SLIDE
#------------------
* Python multiprocess
.image hartman_children.jpg

#------------------
# SLIDE
#------------------
* What now?
.image PulpFictionMedieval.jpg

#------------------
# SLIDE
#------------------
* Digging around the interwebs.
.image zelda_chest.gif

#------------------
# SLIDE
#------------------
* Go!
.image gopher_head.png
.caption https://golang.org/

#------------------
# SLIDE
#------------------
* Go History

* Team Members
- *Rob* *Pike*
- *Robert* *Griesemer*
- David Symonds
- Andrew Gerrand
- Ian Lance Taylor
- Sameer Ajmani
- *Brad* *Fitzpatrick*
- Nigel Tao
- *Ken* *Thompson*
- ...

#------------------
# SLIDE
#------------------
* Robert Griesemer
.image robert_griesemer.jpg

#------------------
# SLIDE
#------------------
* Robert Griesemer Accomplishments
- Google's V8 JavaScript engine
- Chubby
- GFS
- Sawzall
- Java HotSpot virtual machine
- Strongtalk
- vectorizing compiler for the Cray Y-MP and an interpreter for APL.

#------------------
# SLIDE
#------------------
* Brad Fitzpatrick
.image bradfitz.jpg

#------------------
# SLIDE
#------------------
* Brad Fitzpatrick Accomplishments
- memcached
- LiveJournal
- PubSubHubbub
- OpenID
- Camlistore

#------------------
# SLIDE
#------------------
* Rob Pike
.image rob_pike.jpg
.caption The commander

#------------------
# SLIDE
#------------------
* Rob Pike Accomplishments
- Plan 9/Inferno operating systems
- Limbo programming language
- First windows system in Unix
- Text editors sam, acme and others
- Co creator of UTF-8 with Ken Thompson
- Sawzall, Newsqueak and others.

#------------------
# SLIDE
#------------------
* Let's get to it!

#------------------
# SLIDE
#------------------
* ...
- Avoid Language Nuances
- Static Types
- Deployability
- Speed of Development
- Performance

#------------------
# SLIDE
#------------------
* Hello world!
.play helloworld.go HLmain

#------------------
# SLIDE
#------------------
* Slack poster
.code slacker.go /READ OMIT/,/READE OMIT/ HLread

#------------------
# SLIDE
#------------------
* The Truth will set you Free!
.play truth.go

#------------------
# SLIDE
#------------------
* Types, Structs, Methods and Interfaces
.code helloworld.go /STRUCT OMIT/,/STRUCTE OMIT/
The method String() implements the io.Stringer interface.

#------------------
# SLIDE
#------------------
* Deployment
.play static_build.sh

Build static (Linux):

    linux: go build --ldflags '-extldflags "-static"' ./file.go

Cross Compiling:

    GOOS=linux GOARCH=amd64 go build -o hello helloworld.go

#------------------
# SLIDE
#------------------
* Performance
_Go_Routines,_ _Channels,_ _Mutexes!_

* ...
.play gopher.go

* Performance
_Real_world_example_

We needed to look for RPM differences in YUM repos allowing for incremental
change sets and limited syncing over the network.

#------------------
# SLIDE
#------------------
* Parsing RPM XML Repo
.image ryan_graph_without_pypy.png

#------------------
# SLIDE
#------------------
* Tooling?
.image tools.png

#------------------
# SLIDE
#------------------
* Tabs or Spaces?
.image tabs-spaces.jpeg

#------------------
# SLIDE
#------------------
* Tooling ...
- gofmt : Rebuilds your go files to community spec and format.
- go get : Retrieves dependancies for you and puts the source in $GOPATH/src.
- go vet : Examines Go source code and reports suspicious constructs.
- go [build] -race : Provides a race detector looking for deadlocks and race conditions.
- go tool pprof : Performance analyzer

#------------------
# SLIDE
#------------------
* Some potential complaints about Go.
- No tooling to describe interface implementation.
- Lack of Generics.
- Over implementation of channels.  They can be slow.
- Errors can be monotonous
.image kenny.jpg


#------------------
# SLIDE
#------------------
* Error Handling
.code slacker.go /ERR OMIT/,/ERRE OMIT/ HLerr

#------------------
# SLIDE
#------------------
* What was this all about?
- Every process run for monitoring or anything else has a cost.
- Speed of development and ease of deployment are important.
- Finding code issues during compliation vs runtime is important.
